<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 引入外部配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 声明 SqlSessionFactoryBean 用来创建 SqlSessionFactory 对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 指定MyBatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <!-- 声明 MapperScannerConfigurer 用来创建 DAO接口的动态代理对象
        循环遍历 basePackage 中所有的接口，然后使用 SqlSession.getMapper() 为每个接口创建对应的对象，并添加到容器中。

        ApplicationContext ctx = ...

        SqlSessionFactory factory = ctx.getBean("", SqlSessionFactory.class);
        SqlSession session = factory.openSession();

        for(接口: com.bpf.dao ) {
            接口 对象 = session.getMapper(接口.class);
            springMap.put(对象名，对象);

        }

        对象名：接口名首字母小写
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <!-- 指定 SqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 指定 DAO 接口所在的包 -->
        <property name="basePackage" value="com.bpf.dao" />
    </bean>

    <!-- 声明 StudentServiceImpl -->
    <bean id="studentService" class="com.bpf.service.impl.StudentServiceImpl">
        <property name="studentDao" ref="studentDao" />
    </bean>
</beans>